<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
            background-color: black;
        }

        * {
            box-sizing: border-box;
        }

        /* Add padding to containers */
        .container {
            padding: 16px;
            background-color: white;
        }

        /* Full-width input fields */
        input[type=text],
        input[type=password] {
            width: 100%;
            padding: 15px;
            margin: 5px 0 22px 0;
            display: inline-block;
            border: none;
            background: #f1f1f1;
        }

        input[type=text]:focus,
        input[type=password]:focus {
            background-color: #ddd;
            outline: none;
        }

        /* Overwrite default styles of hr */
        hr {
            border: 1px solid #f1f1f1;
            margin-bottom: 25px;
        }

        /* Set a style for the submit button */
        .registerbtn {
            background-color: #04AA6D;
            color: white;
            padding: 16px 20px;
            margin: 8px 0;
            border: none;
            cursor: pointer;
            width: 100%;
            opacity: 0.9;
        }

        .registerbtn:hover {
            opacity: 1;
        }

        /* Add a blue text color to links */
        a {
            color: dodgerblue;
        }

        /* Set a grey background color and center the text of the "sign in" section */
        .signin {
            background-color: #f1f1f1;
            text-align: center;
        }
    </style>
</head>

<body>







    <div class="container">
        <h1 style="font-size:30px">DATA CUMM. OPEN INTEREST GRAPH</h1>















        <br />
        <br />
        <p id="demo1222" style="color: green;"> demo11 === </p> <span>
            < % network access--- pp158921 main__head %>
        </span>




        <div class="container signin">


            <canvas id="myChart" style="width:100%;max-width:600px"></canvas>

            <div style="float: right;padding-bottom: 250px;">



            </div>
        </div>


        <!-- <div id="piechart_3d" style="width: 900px; height: 500px;"></div> -->




        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>



        <script>



            var mapdata11111 = '<%= timestamps %>';

            console.log(Array.isArray(mapdata11111))
            console.log(mapdata11111);



            var mapdata111111 = '<%=  openInterests %>';
            console.log(Array.isArray(mapdata111111))
            console.log(mapdata111111);

            // for string transfer 
            //var peopleEncoded = '<%= encodeURIComponent(JSON.stringify(people)) %>';
            //var peopleArray = JSON.parse(decodeURIComponent(peopleEncoded));
            //console.log(peopleArray);
            //console.log(Array.isArray(peopleArray));  


            // for numeric transfer 
            //var ppp11 = `<%= JSON.stringify(people1) %>`;
            //var ppp21 = JSON.parse(ppp11);
            //console.log(ppp21)
            //console.log(Array.isArray(ppp21))

            var peopleEncoded = '<%= encodeURIComponent(JSON.stringify(timestamps)) %>';
            var peopleArray = JSON.parse(decodeURIComponent(peopleEncoded));
            console.log(peopleArray);
            console.log(Array.isArray(peopleArray));

            var ppp11 = `<%= JSON.stringify(openInterests) %>`;
            var ppp21 = JSON.parse(ppp11);
            console.log(ppp21)
            console.log(Array.isArray(ppp21))

            // async() => {



            //lllllllllllllllllll--------------------------------------




            var y1 = 10;
            var y2 = 15;
            var y3 = 5;
            var y4 = 20;
            var y5 = 10;






            console.log('kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk');












            new Chart("myChart", {
                type: "bar",

                data: {
                    labels: peopleArray,
                    datasets: [{
                        // backgroundColor: ["red", "green", "blue", "orange", "brown"],

                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(128, 0, 0, 0.2)',
                            'rgba(0, 128, 0, 0.2)',
                            'rgba(0, 0, 128, 0.2)',
                            'rgba(255, 0, 255, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(128, 0, 0, 1)',
                            'rgba(0, 128, 0, 1)',
                            'rgba(0, 0, 128, 1)',
                            'rgba(255, 0, 255, 1)'
                        ],
                        borderWidth: 1.5,
                        data: ppp21
                    }]
                },
                reponsive: true,
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: "Year WISE distraction Natural Calamities"
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                min: Math.min(...ppp21),
                                // set the maximum value to the largest positive value in the dataset
                                max: Math.max(...ppp21),
                                // set the step size to 10 or any other value you prefer
                                stepSize: 10
                                //                            max: Math.max(...ff1) * 1.2  ff22


                            },

                            reverse: true
                        }]
                    }
                }
            });

        </script>


        </form>



</body>

</html>